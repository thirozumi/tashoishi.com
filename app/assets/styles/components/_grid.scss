
//
// Grid
// --------------------------------------------------


%container {
  margin-left: auto;
  margin-right: auto;
  padding-left: $gutter / 2;
  padding-right: $gutter / 2;
  @media #{$breakpoint-sm-up} {
    padding-left: $gutter;
    padding-right: $gutter;
  }
  [class*='col'] {
    padding-left: $gutter / 2;
    padding-right: $gutter / 2;
  }
}

%container-gapless {
  padding-left: 0;
  padding-right: 0;
  @media #{$breakpoint-sm-up} {
    padding-left: 0;
    padding-right: 0;
  }
  [class*='col'] {
    padding-left: 0;
    padding-right: 0;
  }
}

.container {
  @extend %container;
}

.container-gapless {
  @extend %container-gapless;
}

.container-xs {
  max-width: $xs-max;
  @extend %container;
}

.container-sm {
  max-width: $sm-max;
  @extend %container;
}

.container-md {
  max-width: $md-max;
  @extend %container;
}

.container-lg {
  max-width: $lg-max;
  @extend %container;
}


// Creds to https://github.com/kristoferjoseph/flexboxgrid
// No gutters
// No text alignment with justified container classes (center-xs, for example)

.row {
  @include row();
}

.row.reverse {
  @include row-reverse();
}

.row.eq-height {
  @include row-eq-height();
}

.row.auto-height {
  @include row-auto-height();
}

.col {
  flex-grow: 1;
  flex-basis: 0;
  max-width: 100%;
}

.col.reverse {
  @include col-reverse();
}

.first {
  order: -1;
}
.last {
  order: 1;
}

// Mixin to run inside of for loop - creates col/breakpoint classes * Not for developer use *
@mixin col-factory($thisPrefix) {
  .col-#{$thisPrefix} {
    flex-grow: 1;
    flex-basis: 0;
    max-width: 100%;
  }
  @for $i from 1 through $grid-columns {
    .col-#{$thisPrefix}-#{$i} {
      flex-basis: 100% / $grid-columns * $i;
      max-width: 100% / $grid-columns * $i;
    }
    .col-#{$thisPrefix}-offset-#{$i} {
      margin-left: 100% / $grid-columns * $i;
    }
  }
  .start-#{$thisPrefix} {
    justify-content: flex-start;
  }
  .center-#{$thisPrefix} {
    justify-content: center;
  }
  .end-#{$thisPrefix} {
    justify-content: flex-end;
  }
  .top-#{$thisPrefix} {
    align-items: flex-start;
  }
  .middle-#{$thisPrefix} {
    align-items: center;
  }
  .bottom-#{$thisPrefix} {
    align-items: flex-end;
  }
  .around-#{$thisPrefix} {
    justify-content: space-around;
  }
  .between-#{$thisPrefix} {
    justify-content: space-between;
  }
  .first-#{$thisPrefix} {
    order: -1;
  }
  .last-#{$thisPrefix} {
    order: 1;
  }
} // Mixin to run inside of for loop - creates col/breakpoint classes

@for $i from 1 through length($breakpoint-up-prefixes) {
  $thisPrefix: nth($breakpoint-up-prefixes, $i);
  @if $thisPrefix == "xs" {
    @include col-factory($thisPrefix);
  } @else if $thisPrefix == "sm" {
    @media #{$breakpoint-sm-up} {
      @include col-factory($thisPrefix);
    }
  } @else if $thisPrefix == "md" {
    @media #{$breakpoint-md-up} {
      @include col-factory($thisPrefix);
    }
  } @else if $thisPrefix == "lg" {
    @media #{$breakpoint-lg-up} {
      @include col-factory($thisPrefix);
    }
  } @else if $thisPrefix == "xl" {
    @media #{$breakpoint-xl-up} {
      @include col-factory($thisPrefix);
    }
  }
}
